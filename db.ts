/* tslint:disable */
/* eslint-disable */

/**
 * AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * This file was automatically generated by pg-to-ts v.4.1.1
 * $ pg-to-ts generate -c postgresql://username:password@127.0.0.1:54322/postgres -t language -t node -t node_attribute -t node_data_api -t node_data_binding -t node_plugin -t node_resizable -t node_state -t node_style -t node_text -t page -t page_metadata -t pgmigrations -t user_info -s public
 *
 */

export type Json = unknown
export type Direction = 'horizontal' | 'vertical'

// Table language
export interface Language {
  id: string
  is_active: boolean
  code: string
  language: string
}
export interface LanguageInput {
  id?: string
  is_active?: boolean
  code: string
  language: string
}
export const language = {
  tableName: 'language',
  columns: ['id', 'is_active', 'code', 'language'],
  requiredForInsert: ['code', 'language'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Language,
  $input: null as unknown as LanguageInput,
} as const

// Table node
export interface Node {
  id: string
  page_id: string
  mount_id: string | null
  order: number
  /** Friendly name to represent node in CMS */
  name: string | null
  language: string
  module_url: string | null
  class_name: string | null
  css: string | null
  is_active: boolean
  require_auth: boolean
  tag_name: string
  /** hashtag tags for node */
  tags: string[]
  created_at: Date
  created_by: string
  modified_at: Date | null
  modified_by: string | null
}
export interface NodeInput {
  id?: string
  page_id: string
  mount_id?: string | null
  order?: number
  /** Friendly name to represent node in CMS */
  name?: string | null
  language: string
  module_url?: string | null
  class_name?: string | null
  css?: string | null
  is_active?: boolean
  require_auth?: boolean
  tag_name?: string
  /** hashtag tags for node */
  tags?: string[]
  created_at?: Date
  created_by: string
  modified_at?: Date | null
  modified_by?: string | null
}
export const node = {
  tableName: 'node',
  columns: [
    'id',
    'page_id',
    'mount_id',
    'order',
    'name',
    'language',
    'module_url',
    'class_name',
    'css',
    'is_active',
    'require_auth',
    'tag_name',
    'tags',
    'created_at',
    'created_by',
    'modified_at',
    'modified_by',
  ],
  requiredForInsert: ['page_id', 'language', 'created_by'],
  primaryKey: 'id',
  foreignKeys: {
    page_id: { table: 'page', column: 'id', $type: null as unknown as Page },
    mount_id: { table: 'node', column: 'id', $type: null as unknown as Node },
    language: {
      table: 'language',
      column: 'id',
      $type: null as unknown as Language,
    },
  },
  $type: null as unknown as Node,
  $input: null as unknown as NodeInput,
} as const

// Table node_attribute
export interface NodeAttribute {
  id: string
  node_id: string
  key: string
  value: string | null
}
export interface NodeAttributeInput {
  id?: string
  node_id: string
  key: string
  value?: string | null
}
export const node_attribute = {
  tableName: 'node_attribute',
  columns: ['id', 'node_id', 'key', 'value'],
  requiredForInsert: ['node_id', 'key'],
  primaryKey: 'id',
  foreignKeys: {
    node_id: { table: 'node', column: 'id', $type: null as unknown as Node },
  },
  $type: null as unknown as NodeAttribute,
  $input: null as unknown as NodeAttributeInput,
} as const

// Table node_data_api
export interface NodeDataApi {
  id: string
  node_id: string
  api: string
}
export interface NodeDataApiInput {
  id?: string
  node_id: string
  api: string
}
export const node_data_api = {
  tableName: 'node_data_api',
  columns: ['id', 'node_id', 'api'],
  requiredForInsert: ['node_id', 'api'],
  primaryKey: 'id',
  foreignKeys: {
    node_id: { table: 'node', column: 'id', $type: null as unknown as Node },
  },
  $type: null as unknown as NodeDataApi,
  $input: null as unknown as NodeDataApiInput,
} as const

// Table node_data_binding
export interface NodeDataBinding {
  id: string
  node_id: string
  key: string
}
export interface NodeDataBindingInput {
  id?: string
  node_id: string
  key: string
}
export const node_data_binding = {
  tableName: 'node_data_binding',
  columns: ['id', 'node_id', 'key'],
  requiredForInsert: ['node_id', 'key'],
  primaryKey: 'id',
  foreignKeys: {
    node_id: { table: 'node', column: 'id', $type: null as unknown as Node },
  },
  $type: null as unknown as NodeDataBinding,
  $input: null as unknown as NodeDataBindingInput,
} as const

// Table node_plugin
export interface NodePlugin {
  id: string
  node_id: string
  url: string
  order: number
  cascade_depth: number | null
  is_active: boolean
  require_auth: boolean
  show_on_site: boolean
}
export interface NodePluginInput {
  id?: string
  node_id: string
  url: string
  order: number
  cascade_depth?: number | null
  is_active?: boolean
  require_auth?: boolean
  show_on_site?: boolean
}
export const node_plugin = {
  tableName: 'node_plugin',
  columns: [
    'id',
    'node_id',
    'url',
    'order',
    'cascade_depth',
    'is_active',
    'require_auth',
    'show_on_site',
  ],
  requiredForInsert: ['node_id', 'url', 'order'],
  primaryKey: 'id',
  foreignKeys: {
    node_id: { table: 'node', column: 'id', $type: null as unknown as Node },
  },
  $type: null as unknown as NodePlugin,
  $input: null as unknown as NodePluginInput,
} as const

// Table node_resizable
export interface NodeResizable {
  id: string
  node_id: string
  size: number[]
  direction: Direction
  show_on_site: boolean
}
export interface NodeResizableInput {
  id?: string
  node_id: string
  size?: number[]
  direction: Direction
  show_on_site?: boolean
}
export const node_resizable = {
  tableName: 'node_resizable',
  columns: ['id', 'node_id', 'size', 'direction', 'show_on_site'],
  requiredForInsert: ['node_id', 'direction'],
  primaryKey: 'id',
  foreignKeys: {
    node_id: { table: 'node', column: 'id', $type: null as unknown as Node },
  },
  $type: null as unknown as NodeResizable,
  $input: null as unknown as NodeResizableInput,
} as const

// Table node_state
export interface NodeState {
  id: string
  node_id: string
  name: string
  value: Json | null
}
export interface NodeStateInput {
  id?: string
  node_id: string
  name: string
  value?: Json | null
}
export const node_state = {
  tableName: 'node_state',
  columns: ['id', 'node_id', 'name', 'value'],
  requiredForInsert: ['node_id', 'name'],
  primaryKey: 'id',
  foreignKeys: {
    node_id: { table: 'node', column: 'id', $type: null as unknown as Node },
  },
  $type: null as unknown as NodeState,
  $input: null as unknown as NodeStateInput,
} as const

// Table node_style
export interface NodeStyle {
  id: string
  node_id: string
  key: string
  value: string | null
}
export interface NodeStyleInput {
  id?: string
  node_id: string
  key: string
  value?: string | null
}
export const node_style = {
  tableName: 'node_style',
  columns: ['id', 'node_id', 'key', 'value'],
  requiredForInsert: ['node_id', 'key'],
  primaryKey: 'id',
  foreignKeys: {
    node_id: { table: 'node', column: 'id', $type: null as unknown as Node },
  },
  $type: null as unknown as NodeStyle,
  $input: null as unknown as NodeStyleInput,
} as const

// Table node_text
export interface NodeText {
  id: string
  language: string
  node_id: string
  text: string
}
export interface NodeTextInput {
  id?: string
  language: string
  node_id: string
  text: string
}
export const node_text = {
  tableName: 'node_text',
  columns: ['id', 'language', 'node_id', 'text'],
  requiredForInsert: ['language', 'node_id', 'text'],
  primaryKey: 'id',
  foreignKeys: {
    language: {
      table: 'language',
      column: 'id',
      $type: null as unknown as Language,
    },
    node_id: { table: 'node', column: 'id', $type: null as unknown as Node },
  },
  $type: null as unknown as NodeText,
  $input: null as unknown as NodeTextInput,
} as const

// Table page
export interface Page {
  id: string
  /** Friendly name to represent page in CMS */
  name: string | null
  path: string | null
  title: string | null
  language: string | null
  is_active: boolean
  require_auth: boolean
  /** hashtag tags for page */
  tags: string[] | null
  created_at: Date
  created_by: string
  modified_at: Date | null
  modified_by: string | null
}
export interface PageInput {
  id?: string
  /** Friendly name to represent page in CMS */
  name?: string | null
  path?: string | null
  title?: string | null
  language?: string | null
  is_active?: boolean
  require_auth?: boolean
  /** hashtag tags for page */
  tags?: string[] | null
  created_at?: Date
  created_by: string
  modified_at?: Date | null
  modified_by?: string | null
}
export const page = {
  tableName: 'page',
  columns: [
    'id',
    'name',
    'path',
    'title',
    'language',
    'is_active',
    'require_auth',
    'tags',
    'created_at',
    'created_by',
    'modified_at',
    'modified_by',
  ],
  requiredForInsert: ['created_by'],
  primaryKey: 'id',
  foreignKeys: {
    language: {
      table: 'language',
      column: 'id',
      $type: null as unknown as Language,
    },
  },
  $type: null as unknown as Page,
  $input: null as unknown as PageInput,
} as const

// Table page_metadata
export interface PageMetadata {
  id: string
  page_id: string
  name: string
  content: string
  is_active: boolean
}
export interface PageMetadataInput {
  id?: string
  page_id: string
  name: string
  content?: string
  is_active?: boolean
}
export const page_metadata = {
  tableName: 'page_metadata',
  columns: ['id', 'page_id', 'name', 'content', 'is_active'],
  requiredForInsert: ['page_id', 'name'],
  primaryKey: 'id',
  foreignKeys: {
    page_id: { table: 'page', column: 'id', $type: null as unknown as Page },
  },
  $type: null as unknown as PageMetadata,
  $input: null as unknown as PageMetadataInput,
} as const

// Table pgmigrations
export interface Pgmigrations {
  id: number
  name: string
  run_on: Date
}
export interface PgmigrationsInput {
  id?: number
  name: string
  run_on: Date
}
const pgmigrations = {
  tableName: 'pgmigrations',
  columns: ['id', 'name', 'run_on'],
  requiredForInsert: ['name', 'run_on'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Pgmigrations,
  $input: null as unknown as PgmigrationsInput,
} as const

// Table user_info
export interface UserInfo {
  id: string
  first_name: string
  middle_name: string | null
  last_name: string
  alias: string | null
  profile_image: string | null
  cms_access: boolean
  role: string
}
export interface UserInfoInput {
  id: string
  first_name?: string
  middle_name?: string | null
  last_name?: string
  alias?: string | null
  profile_image?: string | null
  cms_access?: boolean
  role: string
}
export const user_info = {
  tableName: 'user_info',
  columns: [
    'id',
    'first_name',
    'middle_name',
    'last_name',
    'alias',
    'profile_image',
    'cms_access',
    'role',
  ],
  requiredForInsert: ['id', 'role'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as UserInfo,
  $input: null as unknown as UserInfoInput,
} as const

export interface TableTypes {
  language: {
    select: Language
    input: LanguageInput
  }
  node: {
    select: Node
    input: NodeInput
  }
  node_attribute: {
    select: NodeAttribute
    input: NodeAttributeInput
  }
  node_data_api: {
    select: NodeDataApi
    input: NodeDataApiInput
  }
  node_data_binding: {
    select: NodeDataBinding
    input: NodeDataBindingInput
  }
  node_plugin: {
    select: NodePlugin
    input: NodePluginInput
  }
  node_resizable: {
    select: NodeResizable
    input: NodeResizableInput
  }
  node_state: {
    select: NodeState
    input: NodeStateInput
  }
  node_style: {
    select: NodeStyle
    input: NodeStyleInput
  }
  node_text: {
    select: NodeText
    input: NodeTextInput
  }
  page: {
    select: Page
    input: PageInput
  }
  page_metadata: {
    select: PageMetadata
    input: PageMetadataInput
  }
  pgmigrations: {
    select: Pgmigrations
    input: PgmigrationsInput
  }
  user_info: {
    select: UserInfo
    input: UserInfoInput
  }
}

const tables = {
  language,
  node,
  node_attribute,
  node_data_api,
  node_data_binding,
  node_plugin,
  node_resizable,
  node_state,
  node_style,
  node_text,
  page,
  page_metadata,
  pgmigrations,
  user_info,
}

export const seedColumns = [
  { field: 'id', type: 'string' },
  { field: 'is_active', type: 'boolean' },
  { field: 'code', type: 'string' },
  { field: 'language', type: 'string' },
  { field: 'page_id', type: 'string' },
  { field: 'mount_id', type: 'string' },
  { field: 'order', type: 'number' },
  { field: 'name', type: 'string' },
  { field: 'module_url', type: 'string' },
  { field: 'class_name', type: 'string' },
  { field: 'css', type: 'string' },
  { field: 'require_auth', type: 'boolean' },
  { field: 'tag_name', type: 'string' },
  { field: 'created_by', type: 'string' },
  { field: 'modified_by', type: 'string' },
  { field: 'node_id', type: 'string' },
  { field: 'key', type: 'string' },
  { field: 'value', type: 'string' },
  { field: 'api', type: 'string' },
  { field: 'url', type: 'string' },
  { field: 'cascade_depth', type: 'number' },
  { field: 'show_on_site', type: 'boolean' },
  { field: 'text', type: 'string' },
  { field: 'path', type: 'string' },
  { field: 'title', type: 'string' },
  { field: 'content', type: 'string' },
  { field: 'id', type: 'number' },
  { field: 'first_name', type: 'string' },
  { field: 'middle_name', type: 'string' },
  { field: 'last_name', type: 'string' },
  { field: 'alias', type: 'string' },
  { field: 'profile_image', type: 'string' },
  { field: 'cms_access', type: 'boolean' },
  { field: 'role', type: 'string' },
]
